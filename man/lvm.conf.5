.TH LVM.CONF 5 "LVM TOOLS" "Sistina Software UK" \" -*- nroff -*-
.SH NAME
lvm.conf \- Configuration file for LVM2
.SH SYNOPSIS
.B /etc/lvm/lvm.conf
.SH DESCRIPTION
lvm.conf is loaded during the initialisation phase of 
\fBlvm\fP (8).  This file can in turn lead to other files
being loaded - settings read in later override earlier
settings.  File timestamps are checked between commands and if 
any have changed, all the files are reloaded.  
.LP
Use \fBlvm dumpconfig\fP to check what settings are in use.
.SH SYNTAX
.LP
This section describes the configuration file syntax.
.LP
Whitespace is not significant unless it is within quotes. 
This provides a wide choice of acceptable indentation styles.
Comments begin with # and continue to the end of the line.
They are treated as whitespace.
.LP
Here is an informal grammar:
.TP
\fBfile = value*\fP
.br
A configuration file consists of a set of values.
.TP
\fBvalue = section | assignment\fP
.br
A value can either be a new section, or an assignment.
.TP
\fBsection = identifier '{' value* '}'\fP
.br
A section is groups associated values together.  
.br
It is denoted by a name and delimited by curly brackets.
.br
e.g.	backup {
.br
		...
.br
	}
.TP
\fBassignment = identifier '=' (array | type)\fP
.br
An assignment associates a type with an identifier.
.br
e.g.	max_archives = 42
.br
.TP
\fBarray = '[' (type ',')* type ']' | '[' ']'\fP
.br
Inhomogeneous arrays are supported. 
.br
Elements must be separated by commas.  
.br
An empty array is acceptable.
.TP
\fBtype = integer | float | string\fP
\fBinteger = [0-9]*\fP
.br
\fBfloat = [0-9]*\.[0-9]*\fP
.br
\fBstring = '"' .* '"'\fP
.IP
Strings must be enclosed in double quotes.

.SH SECTIONS
.LP
The sections that may be present in the file are:
.TP
\fBdevices\fP \(em Device settings
.IP
\fBdir\fP \(em Directory in which to create volume group device nodes.
Defaults to "/dev".  Commands also accept this as a prefix on volume 
group names.
.IP
\fBscan\fP \(em List of directories to scan recursively for 
LVM physical volumes.
Devices in directories outside this hierarchy will be ignored.
Defaults to "/dev".
.IP
\fBfilter\fP \(em List of patterns to apply to devices found by a scan.
Patterns are regular expressions delimited by any character and preceded
by \fBa\fP (for accept) or \fBr\fP (for reject).  The list is traversed
in order, and the first regex that matches determines if the device
will be accepted or rejected (ignored).  Devices that don't match
any patterns are accepted. If you want to reject patterns that
don't match, end the list with "r/.*/".
If there are several names for the same device (e.g. symbolic links
in /dev), if any name matches any \fBa\fP pattern, the
device is accepted; otherwise if any name matches any \fBr\fP
pattern it is rejected; otherwise it is accepted.
As an example, to ignore /dev/cdrom you could use:
\fBdevices { filter=["r|cdrom|"] }\fP 
.IP
\fBcache\fP \(em Persistent filter cache file.
Defaults to "/etc/lvm/.cache".
.IP
\fBwrite_cache_state\fP \(em Set to 0 to disable the writing out of the 
persistent filter cache file when \fBlvm\fP exits.
Defaults to 1.
.IP
\fBtypes\fP \(em List of pairs of additional acceptable block device types
found in /proc/devices together with maximum (non-zero) number of
partitions (normally 16).  By default, LVM2 supports ide, sd, md, loop, 
dasd, dac960, nbd, ida, cciss, ubd, ataraid, drbd, power2, i2o_block
and iseries/vd.  Block devices with major
numbers of different types are ignored by LVM2.  
Example: \fBtypes = ["fd", 16]\fP.
To create physical volumes on device-mapper volumes
created outside LVM2, perhaps encrypted ones from \fBcryptsetup\fP,
you'll need \fBtypes = ["device-mapper", 16]\fP.  But if you do this,
be careful to avoid recursion within LVM2.
.IP
\fBsysfs_scan\fP (em If set to 1 and your kernel supports sysfs and 
it is mounted, sysfs will be used as a quick way of filtering out
block devices that are not present.
.IP
\fBmd_component_detection\fP (em If set to 1, LVM2 will ignore devices
used as components of software RAID (md) devices by looking for md
superblocks. This doesn't always work satisfactorily e.g. if a device 
has been reused without wiping the md superblocks first.
.TP
\fBlog\fP \(em Default log settings
.IP
\fBfile\fP \(em Location of log file.  If this entry is not present, no
log file is written.
.IP
\fBoverwrite\fP \(em Set to 1 to overwrite the log file each time a tool
is invoked.  By default tools append messages to the log file.
.IP
\fBlevel\fP \(em Log level (0-9) of messages to write to the file.
9 is the most verbose; 0 should produce no output.
.IP
\fBverbose\fP \(em Default level (0-3) of messages sent to stdout or stderr.
3 is the most verbose; 0 should produce the least output.
.IP
\fBsyslog\fP \(em Set to 1 (the default) to send log messages through syslog.
Turn off by setting to 0.  If you set to an integer greater than one,
this is used - unvalidated - as the facility.  The default is LOG_USER.  
See /usr/include/sys/syslog.h for safe facility values to use.
For example, LOG_LOCAL0 might be 128.
.IP
\fBindent\fP \(em When set to 1 (the default) messages are indented 
according to their severity, two spaces per level.  
Set to 0 to turn off indentation.
.IP
\fBcommand_names\fP \(em When set to 1, the command name is used as a
prefix for each message.
Default is 0 (off).
.IP
\fBprefix\fP \(em Prefix used for all messages (after the command name).
Default is two spaces.
.IP
\fBactivation\fP \(em Set to 1 to log messages while
devices are suspended during activation.  
Only set this temporarily while debugging a problem because
in low memory situations this setting can cause your machine to lock up.
.TP
\fBbackup\fP \(em Configuration for metadata backups.
.IP
\fBarchive_dir\fP \(em Directory used for automatic metadata archives.
Backup copies of former metadata for each volume group are archived here.
Defaults to "/etc/lvm/archive".
.IP
\fBbackup_dir\fP \(em Directory used for automatic metadata backups.
A single backup copy of the current metadata for each volume group 
is stored here.
Defaults to "/etc/lvm/backup".
.IP
\fBarchive\fP \(em Whether or not tools automatically archive existing
metadata into \fBarchive_dir\fP before making changes to it.
Default is 1 (automatic archives enabled).  
Set to 0 to disable.  
Disabling this might make metadata recovery difficult or impossible 
if something goes wrong.
.IP
\fBbackup\fP \(em Whether or not tools make an automatic backup 
into \fBbackup_dir\fP after changing metadata.  
Default is 1 (automatic backups enabled).  Set to 0 to disable.
Disabling this might make metadata recovery difficult or impossible 
if something goes wrong.
.IP
\fBretain_min\fP \(em Minimum number of archives to keep.
Defaults to 10.
.IP
\fBretain_days\fP \(em Minimum number of days to keep archive files.
Defaults to 30.
.TP
\fBshell\fP \(em LVM2 built-in readline shell settings
.IP
\fBhistory_size\fP \(em Maximum number of lines of shell history to retain (default 100) in $HOME/.lvm_history
.TP
\fBglobal\fP \(em Global settings
.IP
\fBtest\fP \(em If set to 1, run tools in test mode i.e. no changes to
the on-disk metadata will get made.  It's equivalent to having the
-t option on every command.
.IP
\fBactivation\fP \(em Set to 0 to turn off all communication with
the device-mapper driver.  Useful if you want to manipulate logical
volumes while device-mapper is not present in your kernel.
.IP
\fBproc\fP \(em Mount point of proc filesystem.
Defaults to /proc.
.IP
\fBumask\fP \(em File creation mask for any files and directories created.
Interpreted as octal if the first digit is zero.
Defaults to 077.  
Use 022 to allow other users to read the files by default.
.SH FILES
.I /etc/lvm/lvm.conf
.SH SEE ALSO
.BR lvm (8)
.BR umask (2)
.BR syslog (3)
.BR syslog.conf (5)
